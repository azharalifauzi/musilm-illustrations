version: '3.8'

services:
  # server service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: ${BUILD_TARGET}
    image: muslim-illustrations-server
    container_name: muslim-illustrations-server
    ports:
      - '80:80' # Connect localhost 80 port to container 80 port
      - '443:443'
    networks:
      - app-network
    volumes:
      - web-root:/var/www/html
      - ./server/nginx/${BUILD_TARGET}/:/etc/nginx/
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - api
      - client
  # api service
  api:
    build:
      context: ./api
      target: ${BUILD_TARGET}
      dockerfile: Dockerfile
    image: azharalifauzi/muslim-illustrations-api
    container_name: muslim-illustrations-api
    volumes:
      - ./api/:/app/main
      - /app/main/node_modules
      - data-images:/app/main/dist/public
    ports:
      - '5000:5000'
    depends_on:
      - mongo
    networks:
      - app-network
    environment:
      - MONGO_URI=${MONGO_URI}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - JWT_KEY=${JWT_KEY}
  # mongo service
  mongo:
    image: mongo
    container_name: muslim-illustrations-mongo
    volumes:
      - data-volume:/data/db
    ports:
      - '27017:27017'
    networks:
      - app-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
  # client service
  client:
    build:
      context: ./client
      target: ${BUILD_TARGET}
      dockerfile: Dockerfile
    image: azharalifauzi/muslim-illustrations-client
    container_name: muslim-illustrations-client
    volumes:
      - type: bind
        source: ./client/
        target: /app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    ports:
      - '3000:3000'
    networks:
      - app-network
    environment:
      - CHOKIDAR_USEPOLLING=true

networks:
  app-network:
    driver: bridge

volumes:
  certbot-etc:
  certbot-var:
  data-volume:
  data-images:
  node_modules:
  web-root:
    driver: local
